@model FloorballTrainingSessions.GenerateTrainings

@{
    ViewBag.Title = "Create";
}

<div class="well well-sm">
<h2>Vygenerování tréninků @ViewBag.SelectedSeasonName </h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="well well-sm">
    <div class="form-horizontal">
        
        <hr />
        

        @Html.HiddenFor(model => model.CurrentUser, new { @Value = ViewBag.CurrentUser })
        @Html.HiddenFor(model => model.CurrentPlayerName, new { @Value = ViewBag.CurrentPlayer })
        @Html.HiddenFor(model => model.CurrentPlayer, new { @Value = ViewBag.CurrentPlayer })
        @Html.HiddenFor(model => model.SelectedTeam, new { @Value = ViewBag.SelectedTeam })
        @Html.HiddenFor(model => model.SelectedSeason, new { @Value = ViewBag.SelectedSeason })
        @Html.HiddenFor(model => model.SelectedSeasonName, new { @Value = ViewBag.SelectedSeason })
        @Html.HiddenFor(model => model.SelectedTeamName, new { @Value = ViewBag.SelectedTeam })
        @Html.HiddenFor(model => model.TrainingSchemeModel)
        @Html.HiddenFor(model => model.TrainingFocus)


        <div class="form-group">
            @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control datepicker" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control datepicker" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SeasonPart, "SeasonPart", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SeasonPart", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.dayinweek, "DayInWeek", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DayInWeek", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TrainingLocation, "TrainingLocation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TrainingLocation", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>

        

        

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrainingLength, new { htmlAttributes = new { @class = "form-control" } })


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SigningLimitDaysAhead, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SigningLimitDaysAhead, new { htmlAttributes = new { @class = "form-control" } })


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TrainingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrainingTime, new { htmlAttributes = new { @class = "form-control timepicker" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MeetTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MeetTime, new { htmlAttributes = new { @class = "form-control timepicker" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SigningTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SigningTime, new { htmlAttributes = new { @class = "form-control timepicker" } })

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success btn-sm">
                    <span class="glyphicon glyphicon-plus "></span>
                    <span class="submit-text"></span>
                </button>
                @Html.ActionLink(" ", "List", "Trainings", new { selectedseason = ViewBag.SelectedSeason, selectedteam = ViewBag.SelectedTeam }, new { @class = "btn btn-primary btn-sm glyphicon glyphicon-th-list" })
                @Html.ActionLink(" ", "Index", "Admin", new { seasonId = ViewBag.SelectedSeason }, new { @class = "btn btn-info btn-sm glyphicon glyphicon-home" })
            </div>
        </div>
    </div>
</div>
}



@section Scripts {
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script>

        $(document).ready(function () {
            $(".datepicker").datetimepicker(
                {
                    defaultDate: '',
                    showTodayButton: true,
                    format: 'D.M.YYYY',
                    showClose: true,
                    showClear: true,
                    toolbarPlacement: 'top',
                    stepping: 15
                });
            $(".timepicker").datetimepicker(
                {
                    
                    showTodayButton: true,
                    format: 'HH:mm',
                    showClose: true,
                    showClear: true,
                    toolbarPlacement: 'top',
                    stepping: 15,
                    
                });

        });



    </script>



}


